services:
  frontend:
    container_name: ong_ui
    build: ./frontend
    ports:
      - "5174:5173"
    volumes:
      - ./frontend:/app
      - node_modules_frontend:/app/node_modules
      - type: bind
        source: ./frontend
        target: /app
        consistency: cached
    environment:
      - VITE_API_URL=http://localhost:3000
    command: npm run dev -- --host
    depends_on:
      - backend

  backend:
    container_name: ong_api
    build: ./backend
    ports:
      - "${PORT}:${PORT}"
    volumes:
      - ./backend:/app:delegated
      - node_modules_backend:/app/node_modules
      - /app/dist
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - DEBUG=${DEBUG}
      - FRONTEND_URL=${FRONTEND_URL}
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_DATABASE}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN} 
      - JWT_COOKIE_EXPIRES_IN=${JWT_COOKIE_EXPIRES_IN}
      - ROUNDS=${ROUNDS}
      - TOKEN_SECRET=${TOKEN_SECRET}
      - CHOKIDAR_USEPOLLING=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command: npm run dev
    depends_on:
      - db
      - redis

  db:
    container_name: ong_db
    image: postgres:16-alpine3.21
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d

  redis:
    container_name: ong_redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

volumes:
  node_modules_frontend:
  node_modules_backend:
  postgres_data:
  redis_data:
